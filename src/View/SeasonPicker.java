/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Object.Season;
import System.Main;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Collections;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dave van Rijn, Student 500714558, Klas IS202
 */
public class SeasonPicker extends javax.swing.JPanel {

    private DefaultTableModel model;
    private int pickedId = 0;

    /**
     * Creates new form SeasonPicker
     */
    public SeasonPicker() {
        initComponents();
        tblSeasons.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 1) {
                    int row = tblSeasons.getSelectedRow();
                    pickedId = (int) tblSeasons.getValueAt(row, 0);
                    btnKiezen.setEnabled(true);
                    btnVerwijderen.setEnabled(true);
                }
                if (e.getClickCount() == 2) {
                    Main.setCurrentSeason(pickedId);
                    Startpage.closeFrame();
                }
            }
        });
        model = (DefaultTableModel) tblSeasons.getModel();
        buildTable();
    }

    private void buildTable() {
        model.setRowCount(0);
        List<Season> seasons = Main.getSeasons();
        Collections.sort(seasons, Collections.reverseOrder(new Season.SeasonDateComparator()));
        for (Season s : seasons) {
            Object[] data = new Object[3];
            data[0] = s.getId();
            data[1] = s.getName();
            data[2] = s.getLastEditedString();
            model.addRow(data);
        }
    }

    private void delete() {
        Season s = null;
        for (Season seas : Main.getSeasons()) {
            if (seas.getId() == pickedId) {
                s = seas;
                break;
            }
        }
        if (s != Main.getCurrentSeason()) {
            int option = JOptionPane.showOptionDialog(null,
                    "Weet je zeker dat je seizoen '" + s.getName()
                    + "' wil verwijderen?", "Bevestig", JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Ja", "Nee"}, "Nee");
            if (option == JOptionPane.YES_OPTION) {
                Main.getSeasons().remove(s);
                buildTable();
            }
        } else {
            JOptionPane.showMessageDialog(null,
                    "Je kan het seizoen waar je in werkt niet verwijderen!",
                    "Fout", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblSeasons = new javax.swing.JTable();
        btnKiezen = new javax.swing.JButton();
        btnVerwijderen = new javax.swing.JButton();

        tblSeasons.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblSeasons.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Naam", "Laatst gewijzig"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSeasons.setRowHeight(30);
        tblSeasons.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblSeasons);
        if (tblSeasons.getColumnModel().getColumnCount() > 0) {
            tblSeasons.getColumnModel().getColumn(0).setResizable(false);
            tblSeasons.getColumnModel().getColumn(2).setResizable(false);
        }

        btnKiezen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnKiezen.setText("Kiezen");
        btnKiezen.setEnabled(false);
        btnKiezen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKiezenActionPerformed(evt);
            }
        });

        btnVerwijderen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnVerwijderen.setText("Verwijderen");
        btnVerwijderen.setEnabled(false);
        btnVerwijderen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerwijderenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnVerwijderen)
                        .addGap(18, 18, 18)
                        .addComponent(btnKiezen, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnKiezen, btnVerwijderen});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnKiezen, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVerwijderen, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnKiezenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKiezenActionPerformed
        Main.setCurrentSeason(pickedId);
        Startpage.closeFrame();
    }//GEN-LAST:event_btnKiezenActionPerformed

    private void btnVerwijderenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerwijderenActionPerformed
        delete();
    }//GEN-LAST:event_btnVerwijderenActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKiezen;
    private javax.swing.JButton btnVerwijderen;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSeasons;
    // End of variables declaration//GEN-END:variables
}
